class Solution {
  public:
    void dfs(vector<vector<int>>& adj, unordered_map<int, bool>& visited, vector<int>& ans, int node ){
        ans.push_back(node);
        visited[node] = true;
        // connected node of ke liye Recursive call
        for(auto i:adj[node]){
            if(!visited[i]){
                dfs(adj, visited, ans, i);;
            }
        }
    }
    vector<int> dfs(vector<vector<int>>& adj) {
        // Code here
        int n = adj.size();
        unordered_map<int, bool>visited;
        vector<int>ans;
        for(int i=0;i<n;i++){
            if(!visited[i]){
                dfs(adj, visited, ans, i);
            }
        }
        return ans;
    }
};

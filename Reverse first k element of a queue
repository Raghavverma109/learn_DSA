//...............Reverse first k element of a queue..................
#include <iostream>
#include<queue>
#include<stack>
using namespace std;

void reverse_K_element(queue<int>& q  , int k){
    
    stack<int> s;
    int n = q.size();
    
    if(k <= 0 || k >n) return;
    
    int count = 0;
    while(count != k){
        s.push(q.front());
        q.pop();
        count++ ;
    }
    
    while(!s.empty()){
        int curr = s.top();
        s.pop();
        q.push(curr);
    }
    
    count =0;
    while( count != n -k &&n-k !=0){
        int curr = q.front();
        q.pop();
        q.push(curr);
        count++;
    }
}

void print(queue<int> q) {  // Pass by value to preserve original queue
    while (!q.empty()) {
        cout << q.front() << " ";
        q.pop();
    }
    cout << endl;
}

int main(){
    queue <int> q;
    q.push(10);
    q.push(20);
    q.push(30);
    q.push(40);
    q.push(50);
    
    int k = 3;
    
    cout<<"Queue before reversing "<<k <<" elements :"<<endl;
    print(q);
    
    reverse_K_element(q, k);
    
    cout<<"Queue after reversing "<<k <<" elements :"<<endl;
    print(q);
}
